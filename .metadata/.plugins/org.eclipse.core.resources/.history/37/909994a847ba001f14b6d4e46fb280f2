package com.AppArch.Project.Controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.AppArch.Project.Model.Task;
import com.AppArch.Project.Model.User;
import com.AppArch.Project.Model.UserAuthorization;
import com.AppArch.Project.Service.TaskRepoService;
import com.AppArch.Project.Service.UserRepoService;

import jakarta.servlet.http.HttpServletRequest;



@RestController
public class ApiController {
	@Autowired
	private UserRepoService userServ;
	
	@Autowired
	private TaskRepoService TaskServ;
	
	@Autowired
	private PasswordEncoder pswdEncoder;
	
	@PostMapping("/user/add")
	public void addUser(@RequestBody User u){
		u.setPasswd(pswdEncoder.encode(u.getPasswd()));
		userServ.addUser(u);
	}
	
	@PostMapping("/user/add/authorities")
	public void addAuthorities(@RequestBody UserAuthorization ua) {
		System.out.println(ua);
		userServ.addAuth(ua);
	}
	
	@GetMapping("/users")
	public List<User> getusers(){
		return userServ.getusers();
	}
	
	@GetMapping("/tasks")
	public List<Task> getTasks(){
		return TaskServ.getTasks();
	}
	
	@PostMapping("/tasks/add")
	public void addTasks(@RequestBody Task t){
		System.out.println("Received Task: " + t);
		TaskServ.addTask(t);
	}
	
	@PostMapping("/update/task")
    public void updateTaskFromForm(@RequestBody Map<String, Object> taskData) {
	    int id = (int) taskData.get("id");
	    String title = (String) taskData.get("title");
	    String description = (String) taskData.get("description");
	    float price = ((Number) taskData.get("price")).floatValue();
	    System.out.println(id);
	    //System.out.println(title);
	    
        TaskServ.updateTask(id, title, description, price);
	}
	
	
	
	
	
}
